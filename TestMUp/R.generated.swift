//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }


  /// This `_R.string` struct is generated, and contains static references to 3 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var constants: constants { .init(source: .init(bundle: bundle, tableName: "Constants", preferredLanguages: preferredLanguages, locale: locale)) }
    var launchScreen: launchScreen { .init(source: .init(bundle: bundle, tableName: "LaunchScreen", preferredLanguages: preferredLanguages, locale: locale)) }
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func constants(preferredLanguages: [String]) -> constants {
      .init(source: .init(bundle: bundle, tableName: "Constants", preferredLanguages: preferredLanguages, locale: locale))
    }
    func launchScreen(preferredLanguages: [String]) -> launchScreen {
      .init(source: .init(bundle: bundle, tableName: "LaunchScreen", preferredLanguages: preferredLanguages, locale: locale))
    }
    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.constants` struct is generated, and contains static references to 10 localization keys.
    struct constants {
      let source: RswiftResources.StringResource.Source

      /// Value: 51628853
      ///
      /// Key: app-id
      var appId: RswiftResources.StringResource { .init(key: "app-id", tableName: "Constants", source: source, developmentValue: "51628853", comment: nil) }

      /// Value: expires_in
      ///
      /// Key: expires-in
      var expiresIn: RswiftResources.StringResource { .init(key: "expires-in", tableName: "Constants", source: source, developmentValue: "expires_in", comment: nil) }

      /// Value: GalleryCollectionViewCell
      ///
      /// Key: gallery-collection-view-cell-id
      var galleryCollectionViewCellId: RswiftResources.StringResource { .init(key: "gallery-collection-view-cell-id", tableName: "Constants", source: source, developmentValue: "GalleryCollectionViewCell", comment: nil) }

      /// Value: access_token
      ///
      /// Key: key-access-token
      var keyAccessToken: RswiftResources.StringResource { .init(key: "key-access-token", tableName: "Constants", source: source, developmentValue: "access_token", comment: nil) }

      /// Value: expirationDate
      ///
      /// Key: key-expiration-date
      var keyExpirationDate: RswiftResources.StringResource { .init(key: "key-expiration-date", tableName: "Constants", source: source, developmentValue: "expirationDate", comment: nil) }

      /// Value: 266310117
      ///
      /// Key: request-album-id
      var requestAlbumId: RswiftResources.StringResource { .init(key: "request-album-id", tableName: "Constants", source: source, developmentValue: "266310117", comment: nil) }

      /// Value: https://api.vk.com/method/
      ///
      /// Key: request-base-url
      var requestBaseUrl: RswiftResources.StringResource { .init(key: "request-base-url", tableName: "Constants", source: source, developmentValue: "https://api.vk.com/method/", comment: nil) }

      /// Value: -128666765
      ///
      /// Key: request-owner-id
      var requestOwnerId: RswiftResources.StringResource { .init(key: "request-owner-id", tableName: "Constants", source: source, developmentValue: "-128666765", comment: nil) }

      /// Value: &access_token=
      ///
      /// Key: request-token-title
      var requestTokenTitle: RswiftResources.StringResource { .init(key: "request-token-title", tableName: "Constants", source: source, developmentValue: "&access_token=", comment: nil) }

      /// Value: &v=5.131
      ///
      /// Key: requestAPI-version
      var requestAPIVersion: RswiftResources.StringResource { .init(key: "requestAPI-version", tableName: "Constants", source: source, developmentValue: "&v=5.131", comment: nil) }
    }

    /// This `_R.string.launchScreen` struct is generated, and contains static references to 0 localization keys.
    struct launchScreen {
      let source: RswiftResources.StringResource.Source
    }

    /// This `_R.string.localizable` struct is generated, and contains static references to 15 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// ru translation: Ошибка
      ///
      /// Key: Error
      ///
      /// Locales: ru
      var error: RswiftResources.StringResource { .init(key: "Error", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Не удалось загрузить изображение
      ///
      /// Key: Failed loading images
      ///
      /// Locales: ru
      var failedLoadingImages: RswiftResources.StringResource { .init(key: "Failed loading images", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Галерея
      ///
      /// Key: Gallery
      ///
      /// Locales: ru
      var gallery: RswiftResources.StringResource { .init(key: "Gallery", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Изображение не найдено
      ///
      /// Key: Image not found
      ///
      /// Locales: ru
      var imageNotFound: RswiftResources.StringResource { .init(key: "Image not found", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Изображение успешно сохранено в галерею
      ///
      /// Key: Image successfully saved to gallery
      ///
      /// Locales: ru
      var imageSuccessfullySavedToGallery: RswiftResources.StringResource { .init(key: "Image successfully saved to gallery", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Войти через VK
      ///
      /// Key: Log in with VK
      ///
      /// Locales: ru
      var logInWithVK: RswiftResources.StringResource { .init(key: "Log in with VK", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Выйти
      ///
      /// Key: Logout
      ///
      /// Locales: ru
      var logout: RswiftResources.StringResource { .init(key: "Logout", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Нет
      ///
      /// Key: No
      ///
      /// Locales: ru
      var no: RswiftResources.StringResource { .init(key: "No", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: OK
      ///
      /// Key: Ok
      ///
      /// Locales: ru
      var ok: RswiftResources.StringResource { .init(key: "Ok", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Фотогалерея
      ///
      /// Key: Photo Gallery
      ///
      /// Locales: ru
      var photoGallery: RswiftResources.StringResource { .init(key: "Photo Gallery", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Обновить
      ///
      /// Key: Reload
      ///
      /// Locales: ru
      var reload: RswiftResources.StringResource { .init(key: "Reload", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Сохранено
      ///
      /// Key: Saved
      ///
      /// Locales: ru
      var saved: RswiftResources.StringResource { .init(key: "Saved", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Ошибка в процессе авторизации
      ///
      /// Key: Some error during authorization
      ///
      /// Locales: ru
      var someErrorDuringAuthorization: RswiftResources.StringResource { .init(key: "Some error during authorization", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Ошибка в процессе выполнения
      ///
      /// Key: Some error during execution
      ///
      /// Locales: ru
      var someErrorDuringExecution: RswiftResources.StringResource { .init(key: "Some error during execution", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }

      /// ru translation: Да
      ///
      /// Key: Yes
      ///
      /// Locales: ru
      var yes: RswiftResources.StringResource { .init(key: "Yes", tableName: "Localizable", source: source, developmentValue: nil, comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 3 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `customBlack`.
    var customBlack: RswiftResources.ColorResource { .init(name: "customBlack", path: [], bundle: bundle) }

    /// Color `customWhite`.
    var customWhite: RswiftResources.ColorResource { .init(name: "customWhite", path: [], bundle: bundle) }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }
  }
}